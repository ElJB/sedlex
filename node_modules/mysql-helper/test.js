var mysqlHelper = require('./index.js'),
	assert = require('assert');

var mysql = new mysqlHelper({
	connectionLimit : 10,
	host            : process.env.MYSQLHOST,
	user            : process.env.MYSQLUSER,
	password        : process.env.MYSQLPASSWORD,
	database		: 'test'
});

console.log(process.env.MYSQLPASSWORD);
console.log(process.env.MYSQLUSER);
console.log(process.env.MYSQLHOST);

var testContract = new mysql.Contract({
	tableName: "fruit",
	columns: [
	{
		name: "_id",
		type: "SERIAL"
	},
	{
		name: "color",
		type: "TEXT NOT NULL"
	},
	{
		name: "type",
		type: "TEXT NOT NULL"
	},
	{
		name: "size",
		type: "INTEGER NOT NULL"
	}]
});

assert.equal(testContract.createTableString(), "CREATE TABLE fruit (_id SERIAL, color TEXT NOT NULL, type TEXT NOT NULL, size INTEGER NOT NULL)");

mysql.execSQL(testContract.createTableString())
.then(function insertTest(){
	return mysql.insert(testContract.tableName, testContract.getColumns(), ["red", "apple", 3]);
})
.then(read)
.then(function readTest(result){
	var keys = Object.keys(result[0][0]);
	var truth = { _id: 1, color: 'red', type: 'apple' , size: 3};
	for( i in keys ){
		assert.equal(truth[keys[i]], result[0][0][keys[i]]);
	}
})
.then(function updateTest(){
	return mysql.update(testContract.tableName, ["type", "size"], ["pear", 4]);
})
.then(read)
.then(function readTest(result){
	var keys = Object.keys(result[0][0]);
	var truth = { _id: 1, color: 'red', type: 'pear', size: 4};
	for( i in keys ){
		assert.equal(truth[keys[i]], result[0][0][keys[i]]);
	}
})
.then(read)
.then(function upsertTest(result){
	var id = result[0][0]._id

	return mysql.upsert(testContract.tableName, ["_id", "type"], [id, "apple"])
})
.then(read)
.then(function readTest(result){
	var keys = Object.keys(result[0][0]);
	var truth = { _id: 1, color: 'red', type: 'apple', size: 4};
	for( i in keys ){
		assert.equal(truth[keys[i]], result[0][0][keys[i]]);
	}
})
.then(function deleteTest(){
	return mysql.delete(testContract.tableName, "type = ?", ["apple"])
})
.then(read)
.then(function readTest(result){
	assert.equal(result[0].length, 0);
})
.finally(function drop(){
	mysql.execSQL("DROP TABLE " + testContract.tableName)
})
.catch(log);

function log(err){
	console.log(err.stack);
}

function read(){
	return mysql.query(testContract.tableName);
}